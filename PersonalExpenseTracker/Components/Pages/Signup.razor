@page "/signup"
@using PersonalExpenseTracker.Models
@using PersonalExpenseTracker.Services
@inject IUserService userService
@inject NavigationManager navigationManager

<style>
    .signup-container {
        max-width: 400px;
        margin: 50px auto;
        padding: 20px;
        background: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .text-center {
        text-align: center;
    }

    .signup-form .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .btn {
        display: block;
        width: 100%;
        padding: 10px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn:hover {
        background-color: #0056b3;
    }

    .alert {
        padding: 10px;
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
        border-radius: 5px;
        font-size: 14px;
        margin-top: 15px;
    }

    .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    .form-group select,
    .form-group input {
        margin-top: 5px;
    }

    a {
        color: #007bff;
        text-decoration: none;
    }

    a:hover {
        text-decoration: underline;
    }

    .text-small {
        font-size: 14px;
        margin-top: 15px;
        text-align: center;
    }
</style>

<div class="signup-container">
    <h3 class="text-center">Sign Up</h3>

    <form class="signup-form">
        <div class="form-group">
            <label for="username">User Name:</label>
            <input type="text" id="username" class="form-control" @bind="newUser.UserName" />
        </div>
        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" class="form-control" @bind="newUser.Password" />
        </div>
        <div class="form-group">
            <label for="retypePassword">Retype Password:</label>
            <input type="password" id="retypePassword" class="form-control" @bind="retypePassword" />
        </div>
        <div class="form-group">
            <label for="currencyType">Currency Type:</label>
            <select id="currencyType" class="form-control" @bind="newUser.CurrencyType">
                <option value="USD">USD</option>
                <option value="EUR">EUR</option>
                <option value="RS">NEP</option>
            </select>
        </div>
        <button type="button" class="btn btn-primary" @onclick="AddNewUser">Sign Up</button>
    </form>

    <p class="text-small">
        Already have an account?
        <a href="/login">Login</a>
    </p>

    @if (errorMessage != null)
    {
        <div class="alert">@errorMessage</div>
    }
</div>

@code {
    private User newUser = new User();
    private string errorMessage;
    private string retypePassword;

    private async Task AddNewUser()
    {
        try
        {
            if (newUser.Password != retypePassword)
            {
                errorMessage = "Passwords do not match.";
                return;
            }

            var existingUsers = await userService.LoadUsersAsync();
            if (existingUsers.Any(u => u.UserName.Equals(newUser.UserName, StringComparison.OrdinalIgnoreCase)))
            {
                throw new Exception("Username already exists.");
            }

            await userService.SaveUserAsync(newUser);
            newUser = new User();
            errorMessage = null;
            navigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred while adding the user: {ex.Message}";
            Console.WriteLine(errorMessage);
        }
    }
}
